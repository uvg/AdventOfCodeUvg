ROUTINE YUVGZ201901 [Type=INT]
YUVGZ201901	;https://adventofcode.com/2019/day/1;
	//Intersystems developer community id: 130669-ab1f69bf
	quit
	/*
147077
148686
71851
98056
65024
87254
146003
128542
136657
91885
91904
78806
58210
67520
118393
68344
69593
135370
111892
84153
105683
76166
112780
145179
83811
61481
118277
59732
72222
64606
55645
82168
97590
122479
120365
103057
76225
148099
100610
75592
148678
132756
55335
77094
73992
95097
92382
78885
93657
121709
114261
90565
110043
145497
92066
109833
76107
143941
67084
139407
56730
131457
110026
85632
74239
116964
129806
75030
76317
99523
78069
75685
81279
58287
148135
89313
139141
136066
94046
50430
55242
123494
68410
83716
122608
79343
88826
95968
98603
104895
128814
120473
97504
60990
98132
58895
92987
136301
131747
137498
	*/
	/*
The Elves quickly load you into a spacecraft and prepare to launch.

At the first Go / No Go poll, every Elf is Go until the Fuel Counter-Upper. They haven't determined the amount of fuel required yet.

Fuel required to launch a given module is based on its mass. Specifically, to find the fuel required for a module, take its mass, divide by three, round down, and subtract 2.

For example:

For a mass of 12, divide by 3 and round down to get 4, then subtract 2 to get 2.
For a mass of 14, dividing by 3 and rounding down still yields 4, so the fuel required is also 2.
For a mass of 1969, the fuel required is 654.
For a mass of 100756, the fuel required is 33583.
The Fuel Counter-Upper needs to know the total fuel requirement. To find it, individually calculate the fuel needed for the mass of each module (your puzzle input), then add together all the fuel values.
	*/
Part1(Filename,ModuleData) PUBLIC
{
	set Filename=$get(Filename)
	if $data(ModuleData)=1,$length($get(ModuleData)) set ModuleData(1)=ModuleData
	if $data(ModuleData)<10 {
		if '$length(Filename) {
			write !,"Enter file location: " read Filename
		}
		if '$length(Filename) {
			write !,"No data enterd, so bye bye for now"
			quit 0
		}
		if '$$LoadFile(Filename,.ModuleData) {
			write !,"Can't open file "_Filename_" for reading, bye bye"
			quit 0
		}
	}
	if '$data(ModuleData) {
		write !,"Data wan't found in file "_Filename
		quit 0
	}
	set ERR="",TotalFuel=0
	set Line="" for  {
		set Line=$order(ModuleData(Line)) quit:Line=""
		set Data=ModuleData(Line)
		if Data'?1.n {
			set ERR="Wrong data at line "_Line_" in file "_Filename_" ("_Data_")"
			quit
		}
		set ModuleMass=Data
		set ModuleFuel=ModuleMass/3\1-2
		set TotalFuel=ModuleFuel+TotalFuel
	}
	if $length(ERR) {
		write !,ERR
		quit 0
	}
	//write !,"Total fuel is "_TotalFuel
	quit TotalFuel
}


	/*
During the second Go / No Go poll, the Elf in charge of the Rocket Equation Double-Checker stops the launch sequence. Apparently, you forgot to include additional fuel for the fuel you just added.

Fuel itself requires fuel just like a module - take its mass, divide by three, round down, and subtract 2. However, that fuel also requires fuel, and that fuel requires fuel, and so on. Any mass that would require negative fuel should instead be treated as if it requires zero fuel; the remaining mass, if any, is instead handled by wishing really hard, which has no mass and is outside the scope of this calculation.

So, for each module mass, calculate its fuel and add it to the total. Then, treat the fuel amount you just calculated as the input mass and repeat the process, continuing until a fuel requirement is zero or negative. For example:

A module of mass 14 requires 2 fuel. This fuel requires no further fuel (2 divided by 3 and rounded down is 0, which would call for a negative fuel), so the total fuel required is still just 2.
At first, a module of mass 1969 requires 654 fuel. Then, this fuel requires 216 more fuel (654 / 3 - 2). 216 then requires 70 more fuel, which requires 21 fuel, which requires 5 fuel, which requires no further fuel. So, the total fuel required for a module of mass 1969 is 654 + 216 + 70 + 21 + 5 = 966.
The fuel required by a module of mass 100756 and its fuel is:
33583 + 11192 + 3728 + 1240 + 411 + 135 + 43 + 12 + 2 = 50346.
What is the sum of the fuel requirements for all of the modules on your spacecraft when also taking into account the mass of the added fuel? (Calculate the fuel requirements for each module separately, then add them all up at the end.)
	*/
Part2(Filename,ModuleData) PUBLIC
{
	set Filename=$get(Filename)
	if $data(ModuleData)=1,$length($get(ModuleData)) set ModuleData(1)=ModuleData
	if $data(ModuleData)<10 {
		if '$length(Filename) {
			write !,"Enter file location: " read Filename
		}
		if '$length(Filename) {
			write !,"No data enterd, so bye bye for now"
			quit 0
		}
		if '$$LoadFile(Filename,.ModuleData) {
			write !,"Can't open file "_Filename_" for reading, bye bye"
			quit 0
		}
	}
	if '$data(ModuleData) {
		write !,"Data wan't found in file "_Filename
		quit 0
	}
	set ERR="",TotalFuel=0
	set Line="" for  {
		set Line=$order(ModuleData(Line)) quit:Line=""
		set Data=$piece(ModuleData(Line),"*",1)
		if Data'?1.n {
			set ERR="Wrong data at line "_Line_" in file "_Filename_" ("_Data_")"
			quit
		}
		set ModuleMass=Data
		set ModuleFuel=ModuleMass/3\1-2
		set FuelForModuleFuel=0,CurrentFuelForModuleFuel=ModuleFuel
		f  {
			set CurrentFuelForModuleFuel=CurrentFuelForModuleFuel/3\1-2
			quit:CurrentFuelForModuleFuel'>0
			set FuelForModuleFuel=FuelForModuleFuel+CurrentFuelForModuleFuel
		}
		set $piece(Data,"*",2)=FuelForModuleFuel
		set TotalFuel=ModuleFuel+TotalFuel+FuelForModuleFuel
	}
	if $length(ERR) {
		write !,ERR
		quit 0
	}
	//write !,"Total fuel is "_TotalFuel
	quit TotalFuel
}
LoadFile(FileName,RecordsArr)
{
	kill RecordsArr
	open FileName::2 if '$test {
		write !,"Error loading file "_FileName
		quit 0
	}
	set EndOfFileSW=$zutil(68,40,1) //$system.Process.SetZEOF(1)
	use FileName
	for Line=1:1 {
		read Record quit:$zeof
		if $length(Record) set RecordsArr(Line)=Record
	}
	close FileName
	if 'EndOfFileSW do $zutil(68,40,0) //$system.Process.SetZEOF(0)
	quit 1
}
