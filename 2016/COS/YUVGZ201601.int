ROUTINE YUVGZ201601 [Type=INT]
YUVGZ201601	;https://adventofcode.com/2016/day/1;
	//Intersystems developer community id: 130669-ab1f69bf
	quit
	/*
Input data:
R4, R4, L1, R3, L5, R2, R5, R1, L4, R3, L5, R2, L3, L4, L3, R1, R5, R1, L3, L1, R3, L1, R2, R2, L2, R5, L3, L4, R4, R4, R2, L4, L1, R5, L1, L4, R4, L1, R1, L2, R5, L2, L3, R2, R1, L194, R2, L4, R49, R1, R3, L5, L4, L1, R4, R2, R1, L5, R3, L5, L4, R4, R4, L2, L3, R78, L5, R4, R191, R4, R3, R1, L2, R1, R3, L1, R3, R4, R2, L2, R1, R4, L5, R2, L2, L4, L2, R1, R2, L3, R5, R2, L3, L3, R3, L1, L1, R5, L4, L4, L2, R5, R1, R4, L3, L5, L4, R5, L4, R5, R4, L3, L2, L5, R4, R3, L3, R1, L5, R5, R1, L3, R2, L5, R5, L3, R1, R4, L5, R4, R2, R3, L4, L5, R3, R4, L5, L5, R4, L4, L4, R1, R5, R3, L1, L4, L3, L4, R1, L5, L1, R2, R2, R4, R4, L5, R4, R1, L1, L1, L3, L5, L2, R4, L3, L5, L4, L1, R3
	*/
	/*
Year 2016, Day 1 part 1:
--- Day 1: No Time for a Taxicab ---
Santa's sleigh uses a very high-precision clock to guide its movements, and the clock's oscillator is regulated by stars. Unfortunately, the stars have been stolen... by the Easter Bunny. To save Christmas, Santa needs you to retrieve all fifty stars by December 25th.

Collect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!

You're airdropped near Easter Bunny Headquarters in a city somewhere. "Near", unfortunately, is as close as you can get - the instructions on the Easter Bunny Recruiting Document the Elves intercepted start here, and nobody had time to work them out further.

The Document indicates that you should start at the given coordinates (where you just landed) and face North. Then, follow the provided sequence: either turn left (L) or right (R) 90 degrees, then walk forward the given number of blocks, ending at a new intersection.

There's no time to follow such ridiculous instructions on foot, though, so you take a moment and work out the destination. Given that you can only walk on the street grid of the city, how far is the shortest path to the destination?

For example:

Following R2, L3 leaves you 2 blocks East and 3 blocks North, or 5 blocks away.
R2, R2, R2 leaves you 2 blocks due South of your starting position, which is 2 blocks away.
R5, L5, R5, R3 leaves you 12 blocks away.
How many blocks away is Easter Bunny HQ?
	*/
	/*
W $$Part1^YUVGZ201601(FN)
	*/
Part1(FileName="",RecordsArr) PUBLIC
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set Data=RecordsArr(1)
	set X=0,Y=0,DY=-1,DX=0
	for i=1:1:$length(Data,", ") {
		set Instruction=$piece(Data,", ",i)
		set Direction=$extract(Instruction,1),Length=$extract(Instruction,2,*)
		if Direction="R" {
			if DY {
				set DX=-DY,DY=0
			}
			else {
				set DY=DX,DX=0
			}
		}
		else {
			if DY {
				set DX=DY,DY=0
			}
			else {
				set DY=-DX,DX=0
			}			
		}
		set X=DX*Length+X,Y=DY*Length+Y
	}
	set ANS=$zabs(X)+$zabs(Y)
	//
	//
	//
	quit ANS
}
	/*
Year 2016, Day 1 part 2:
Then, you notice the instructions continue on the back of the Recruiting Document. Easter Bunny HQ is actually at the first location you visit twice.

For example, if your instructions are R8, R4, R4, R8, the first location you visit twice is 4 blocks away, due East.

How many blocks away is the first location you visit twice?
	*/
	/*
W $$Part2^YUVGZ201601(FN)
	*/
Part2(FileName="",RecordsArr) PUBLIC
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set Data=RecordsArr(1)
	set X=0,Y=0,DY=-1,DX=0,Pos(X,Y)=""
	for i=1:1:$length(Data,", ") {
		set Instruction=$piece(Data,", ",i)
		set Direction=$extract(Instruction,1),Length=$extract(Instruction,2,*)
		if Direction="R" {
			if DY {
				set DX=-DY,DY=0
			}
			else {
				set DY=DX,DX=0
			}
		}
		else {
			if DY {
				set DX=DY,DY=0
			}
			else {
				set DY=-DX,DX=0
			}			
		}
		set LastX=X,LastY=Y
		set X=DX*Length+X,Y=DY*Length+Y
		set fromX=LastX,toX=X,fromY=LastY,toY=Y
		set:LastX>X fromX=X,toX=LastX
		set:LastY>Y fromY=Y,toY=LastY
		//W !,"x:",fromX,";",toX
		//W !,"y:",fromY,";",toY,!
		//zw Pos
		set tmpY=Y,SW=0
		if fromX'=toX for tmpX=fromX:1:toX if tmpX'=LastX,$data(Pos(tmpX,tmpY)) set SW=1 quit
		if SW set X=tmpX,Y=tmpY quit
		set tmpX=X
		if fromY'=toY for tmpY=fromY:1:toY if tmpY'=LastY,$data(Pos(tmpX,tmpY)) set SW=1 quit
		if SW set X=tmpX,Y=tmpY quit
		if fromX'=toX for tmpX=fromX:1:toX s Pos(tmpX,Y)=""
		if fromY'=toY for tmpY=fromY:1:toY s Pos(X,tmpY)=""
	}
	set ANS=$zabs(X)+$zabs(Y)
	//
	//
	//
	quit ANS
}
CheckData(RecordsArr)
{
	if ($order(RecordsArr(""))'=1)||($order(RecordsArr(""),-1)'=1) {
		set Error="Only one line of data allowed"
		write !,Error
		quit 0
	}
	set Line="",Error=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		if Record'?1.(1(1"R",1"L")1.N1", ")1(1"R",1"L")1.N {
			set Error="Wrong data format at line "_Line
			quit
		}
	}
	if $length(Error) {
		write !,Error
		quit 0
	}
	quit 1
}
LoadFile(FileName,RecordsArr)
{
	kill RecordsArr
	open FileName::.1 if '$test {
		write !,"Error loading file "_FileName
		quit 0
	}
	set EndOfFileSW=$zutil(68,40,1) //$system.Process.SetZEOF(1)
	use FileName
	for Line=1:1 {
		read Record quit:$zeof
		set RecordsArr(Line)=Record
	}
	close FileName
	if 'EndOfFileSW do $zutil(68,40,0) //$system.Process.SetZEOF(0)
	quit 1
}
