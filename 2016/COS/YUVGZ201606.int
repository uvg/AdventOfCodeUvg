ROUTINE YUVGZ201606 [Type=INT]
YUVGZ201606	;https://adventofcode.com/2016/day/6;
	//Intersystems developer community id: 130669-ab1f69bf
	quit
	/*
Input data:
thrgowrf
qsbidyon
ozgidtqz
gutrkzdh
ybhpnoqp
hgzmlrtd
miwwhwxa
hruiguwy
icnacbco
pobotzjp
jozogvis
bjhweamv
ghnwsumv
urnwoveo
kyamzpuy
veobtklt
hfxwwgbz
ofcghhjf
nxlhajmx
mdohfayr
fyrthwwa
kuiheavb
elctvxlw
pvpqfsgl
qbanyizp
slxofzdo
uoanwznb
cpstpdmx
ufpwybll
mfsiinvo
eovcrzay
cvzolchq
pqlxvwxb
zkfnkyaj
ixlwmbug
jabnzgdb
kilkirfk
gfuykmkq
aecpgljl
adwlxjxv
xxtcpykq
obxkhokj
bjufjwfc
tproccqw
jwuoiqtu
msheuumi
gokgixfv
zadaibgf
zesthnbd
kxjmtzvo
tcoygujo
wzzwocfk
uzntlblp
iwncvgzd
wbzcedzt
yjbcrguo
qylornwn
hbihmfqk
cawzxttm
waeckqpi
wyyzpbir
njvspicp
qixxdpss
bcqpdpwb
nbrtzhft
xntawhvd
adkjqfui
tbzilrva
jxgekuxm
jcegsftj
fleturfx
pthsvurq
luvmbdhu
whnzonvy
gpdnryln
ekedbzsg
bevfcnut
sivrmzhj
otdymbss
rwrrcxba
jqufhxxz
zoibefdq
giwvpgzv
ppudtbfq
amgtgvra
ykrzmioq
edoeflps
twairybf
ivijnkhh
kmmaqgia
sctcgayn
awgqoeek
zyansrzw
dwizwrmk
klsndpkp
dpoukoxs
gfhpelyn
gwwzbvpn
upngprft
yynjpfck
oieuruxy
isfzedhk
acuuzxqv
kmoabrdp
oiibyjdl
rjhliyri
htcqoimr
sadoqxnr
sqblsllz
kckbewmq
cpwqemer
raxliaxi
eunqeabe
jzsvykwl
pvabhaqi
tuhehykm
wjobvsep
szlixchn
cdezcsby
lqcwnjvx
vgmsafiw
fovhnahe
jbpjckyq
znkmhpcx
wgmzglqe
lvlnfhyk
xdfavwhk
dordysun
qcvdvphg
mkeuytfl
khvkdhik
mabrihek
licywjas
abbhpfme
aprhbois
dvcaxzqe
wkdqvmth
nkqsgwtm
mkjqphaw
eaujpqxm
oiuxtfgu
tmvlizry
pgrolaiv
ajmspviz
rizkcoir
xinugghj
zeeqznvw
hjsxuxgo
osltsqub
cezhugle
sksuksmg
cyshkloi
jwlrrnhl
snwudajm
brkvsatz
wshbaezt
wzprouud
rqvyixhn
yxsxvgpz
cbzxgflf
vzizycgr
buqoxumw
njqmaibc
xqjenjch
qilkrngm
vqxymkal
yayrsuqi
rglukdlj
diufkahd
qzuawmom
hxhfqwts
ywpfhodi
kefjqqmh
qeaehurt
kvubjmsg
uwcrqpgy
unmwfefc
hupvanzl
cztzducn
iadogksu
tqqgetae
yoqchevv
bxbznmwx
yvcjypzx
oediwjbr
lhsaybna
tlnyogbg
gnzrgfyk
zqytqykg
rplpeesi
vfvwcsdi
kxmrlfyk
fxmkfefc
qqjebqag
fcozqyic
ypkpnhru
bsxfxrbz
zkfpwxlb
gbioohkw
rkptxwyt
hvulapef
vlpsafev
zwmvniup
dhdijiwf
jttfnlrx
pynkltpo
lhxljxpc
sofixser
tzvnofaf
brmaracd
npwrizpl
xgbjydxj
dgltmium
dqsxcddx
hsskiclo
slntdkip
bbfymmix
zlbfsnms
urkcjxfq
pqgprygl
xcfyuazu
ojhzjrmu
wtigzoce
jpgdjmqz
zevevkrc
fgasbsdl
tqqadokm
zwevytse
lexhdven
llyfsrid
xxdslzwh
nnpugzab
mokozqkq
btnizbte
etayttmp
lnrxigej
wokasdmn
tfuqlzuz
atdhashx
gennlugj
tnllrmey
ehyvfinc
ldepojnu
sraebkrs
atpmsdbc
ytthzvcg
qmvlolxr
rzwbgvos
qqskjpax
jujcgltx
lvfzqffc
xhmepnrr
qlaqngpf
ufwmvweu
ogigefec
rnhkyssh
mfrcejck
vuorsvbm
iargrmpw
qclizwwu
sqycbvaz
ymgzvppr
owvxzsxw
oitrktzr
nftpkdrq
rogsfnkd
brpdtqta
qxwueegp
msgwmbit
nyroibyh
ezlaowzf
zjinbkxb
pjlsmknq
schegkum
aocpzxgt
xndedskz
cyohrtec
aztqhvda
snsejlcw
ebxlduno
cxyuwvoz
erevjlqo
nbqivgwa
bziihjxi
xtghdsug
dyoqwbvq
ucilfrsy
uiasirec
hljecjdc
fkofwjtu
gwtbdimf
ybsfumwq
rspgppqs
hziwvmkb
scgesxaf
ncjgkpoz
icyncqrt
iboqbeyv
gcdgngtt
sjmgejqj
xprllime
obybieyn
uuxwzopg
iyrvmplu
zfkdmdmc
bvjowryc
nfjknvsy
ddxtfgjj
wlxnisjv
hdfvywah
pnjaxxdy
jtqrvrul
uduwvlct
qhhkxksf
urywaujw
uwmpaozp
tftkbnvs
wozvqinc
irxbbzow
kzkkvrss
mppclmuh
ukbujmux
rgqtptbs
gjmkahte
vytpjqvs
itrvfldr
kesgrrso
gmhmixli
mtijqqab
avbmtlvu
nywrwxwl
fjkfxvoi
hfbixejp
nzyliors
krqkrjyf
fyngzuod
jrrdbhcn
fsqjjdyp
glubbqoc
vxtuilvo
yuticjim
guzjruoj
faqhystm
avnluyrv
srmmmoqt
rmgmvmsd
buibmvnw
vsvnggdy
jgjrcxvn
qobbvibq
lnqyhrgd
ndwtmwqj
qbvkgfwu
wwcibnov
akvxghwz
mgznramt
fgtgwowv
kiwatqkf
nwoztclq
fenopcnc
dcajzssq
wqbgtraz
fealmkal
hirebfil
imqscozy
sylptqxy
zmjvucvj
ctidqnjd
rntfxakh
iugzzcow
dfciugpf
vjkeowvy
hanvalnb
gjrbdfqt
cmhtdtua
puewvhco
zdpnizhj
fkyrqddh
oghnqnhm
smjollbz
eghedinb
khyzceef
zpaupbwm
gotcpoep
jtpdeazb
mkvdnuyy
pfthjsni
vkfufiji
esavkoms
glsuccvr
ejbgggft
fzxjtyqi
ayyjcyed
nyrdsgxg
cpxhldnq
rbbqfpnx
ikwidcqz
dlmyfsrh
clpnltqm
fdarhelk
vdyoaexl
wqjgqpal
rqaxccok
tqnassen
gtawfgrr
wrsnxqmh
ehiojtdv
esfayezw
bmimkabx
krzvuvrg
qsmzdhsy
jthlezef
zbrxxfom
vmtnqjbb
yduvoewx
xttawbzk
eshyhzcm
wpfoqjfh
vegumonk
rylrucii
afbqrsqs
lmjctmjb
smdjniyf
cpddsvks
lrqlfrpt
vagdajnt
xopyntni
gcpqvxhu
bfmrtbqh
sutxkaon
myzjhklr
essczatb
keyiqtcp
tbrfvlky
trgvzqut
esghngkd
yhwnoytl
hnefwhpm
nieuscsr
nsnajaul
wkjzjeuo
mvfqcklo
bhrxkbrv
gpexpfzf
ajjcbbep
hwdfidjx
xcjyjwpn
zvogxvmv
pvvfjnqo
drflukjw
fdbwbhhh
pepefxpk
bkwfuhpd
rxoganal
kndbqdwx
wdrjlrgd
yfdekvta
vsyiguva
plvvuixn
sjvputmk
odwsuyug
oipexpol
unjqylth
vnzpnebm
udwwnxwt
umfqfbtg
msjdofkr
dvgmlknk
ouqtkcsq
fljuokjr
mzfxcddl
skjvyqwh
yzxoqmad
ynyawtyu
vhlqobpk
gesduogj
ovnbzpah
pifbihse
hrgsszjq
koakoxws
blnayyif
phecfcyt
inszbvyy
znaxsbel
pelynqso
xgfdxfwl
aagfowsx
unysidcp
jzemmowa
cfpttkrw
cwcrjtlz
cukaayod
iibqydzd
hgikcfjv
qvpmsalj
qqkntfmv
libvgyij
lgdepuyx
yggfpoxy
trzkrwvr
jsoycuvd
aymxmjfb
fgdjyzbh
cdkfzeou
qxcddxso
jlxdgpfr
oxigtmtn
dqwsymki
yehftdis
nxmswjdt
zymvmtkg
afbxkltd
rtzyszcg
rllofrgp
ynummbqc
euykjnfq
mnggmtya
tzwbxqte
cvwyftfe
tukqnpog
eiqlahgy
ozeplbfw
njsqbgyv
xdveerho
rhmhenvq
ahcdupru
ueornsfn
mnfquahf
vqfcwcko
uatlrjpb
vroxbxyw
oodjdmhv
akksajks
gjysnudu
ecojxiia
droydwbc
whzmbwce
xofyanxp
dakigtrb
zpcilghc
tvldgvrd
fznpppua
wkwaxbnj
pwpmqana
xkqtryuu
wxymskwg
irshqddy
lgbjxpfe
sjabfedn
zetwzizj
fvqhvwdg
dxyunmdo
dysewyce
exqiypig
ptkylize
rffuzulb
tmehtnym
idzxeyge
faoywzhs
pjuqhjcp
owhblwgq
nbovadwg
ebexksli
lfulqqoq
ylunlioi
imelunsw
bodrugte
mlpzrcxb
xxxntign
kdvlynkt
cihcddjh
naacqojs
owluhvqd
diqhamjr
fpkmkcgk
qszkccoh
lzojnepr
ifuxihzw
ucrkkejt
ibdkoxjv
vvjbhqof
bhfpyjku
kvadeggp
thuwatxe
qmucwefu
hmkvqoce
uehxhjgx
qcffrcba
aqbrailc
iwxyxcez
xqsmzhna
rjktooch
mxebroky
rucesvnw
eudpmycc
lgiulpaq
ncmchdru
towjwifj
hmimcdiz
uheyvzzu
pxdjuklw
voewmiib
btxahqiz
ddzsksja
vsgwkwph
jshbxcaf
jacsfzzy
wpcspzug
fpvlaonk
lvttlfex
jyhayuxi
lextbqbp
imwspmpo
pdqmerrd
kgegzqsx
lqxpsyxz
btmkrknn
yxbrwvqm
hamdolvv
ztcdvyjb
kgzhhagr
cuictkhm
xrwuuhvk
dkatwxca
jokpxvzu
vmclmwxg
ccqpttvv
hunwzepz
yhxuehzi
nlqvuhpw
qlgofqbe
hkzmtuhj
taclcyea
juuzjluf
mycsuspn
cwdnjmbz
ohjferjx
smysycgc
dpcjblaj
lblpnslg
mfcxombi
lsxoptap
mwytjlfj
ptjcjbya
xaogphdv
apmosnle
dgpptetm
xrzhdlgb
xaiilysj
iagdaeya
	*/
	/*
Year 2016, Day 6 part 1:
--- Day 6: Signals and Noise ---
Something is jamming your communications with Santa. Fortunately, your signal is only partially jammed, and protocol in situations like this is to switch to a simple repetition code to get the message through.

In this model, the same message is sent repeatedly. You've recorded the repeating message signal (your puzzle input), but the data seems quite corrupted - almost too badly to recover. Almost.

All you need to do is figure out which character is most frequent for each position. For example, suppose you had recorded the following messages:

eedadn
drvtee
eandsr
raavrd
atevrs
tsrnev
sdttsa
rasrtv
nssdts
ntnada
svetve
tesnvt
vntsnd
vrdear
dvrsen
enarar
The most common character in the first column is e; in the second, a; in the third, s, and so on. Combining these characters returns the error-corrected message, easter.

Given the recording in your puzzle input, what is the error-corrected version of the message being sent?
	*/
	/*
W $$Part1^YUVGZ201606(FN)
	*/
Part1(FileName="",&RecordsArr) PUBLIC
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set Line=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Data=RecordsArr(Line)
		for pos=1:1:$length(Data) {
			set ltr=$extract(Data,pos)
			set Counter(pos,ltr)=$increment(Counter(pos,ltr))
		}
	}
	set pos="",pass=""
	for  {
		set pos=$order(Counter(pos)) quit:pos=""
		set ltr="",maxCounter=0,maxLetter=""
		for  {
			set ltr=$order(Counter(pos,ltr)) quit:ltr=""
			set counter=Counter(pos,ltr)
			set:counter>maxCounter maxCounter=counter,maxLetter=ltr
		}
		set pass=pass_maxLetter
	}
	set ANS=pass
	//
	//
	//
	quit ANS
}
	/*
Year 2016, Day 6 part 2:
Of course, that would be the message - if you hadn't agreed to use a modified repetition code instead.

In this modified code, the sender instead transmits what looks like random data, but for each character, the character they actually want to send is slightly less likely than the others. Even after signal-jamming noise, you can look at the letter distributions in each column and choose the least common letter to reconstruct the original message.

In the above example, the least common character in the first column is a; in the second, d, and so on. Repeating this process for the remaining characters produces the original message, advent.

Given the recording in your puzzle input and this new decoding methodology, what is the original message that Santa is trying to send?
	*/
	/*
W $$Part2^YUVGZ201606(FN)
	*/
Part2(FileName="",&RecordsArr) PUBLIC
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set Line=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Data=RecordsArr(Line)
		for pos=1:1:$length(Data) {
			set ltr=$extract(Data,pos)
			set Counter(pos,ltr)=$increment(Counter(pos,ltr))
		}
	}
	set pos="",pass=""
	for  {
		set pos=$order(Counter(pos)) quit:pos=""
		set ltr="",minCounter=9999,minLetter=""
		for  {
			set ltr=$order(Counter(pos,ltr)) quit:ltr=""
			set counter=Counter(pos,ltr)
			set:counter<minCounter minCounter=counter,minLetter=ltr
		}
		set pass=pass_minLetter
	}
	set ANS=pass
	//
	//
	//
	quit ANS
}
CheckData(RecordsArr)
{
	set Line="",Error=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		if Record'?.E {
			set Error="Wrong data format at line "_Line
			quit
		}
	}
	if $length(Error) {
		write !,Error
		quit 0
	}
	quit 1
}
LoadFile(FileName,RecordsArr)
{
	kill RecordsArr
	open FileName::.1 if '$test {
		write !,"Error loading file "_FileName
		quit 0
	}
	set EndOfFileSW=$zutil(68,40,1) //$system.Process.SetZEOF(1)
	use FileName
	for Line=1:1 {
		read Record quit:$zeof
		set RecordsArr(Line)=Record
	}
	close FileName
	if 'EndOfFileSW do $zutil(68,40,0) //$system.Process.SetZEOF(0)
	quit 1
}
