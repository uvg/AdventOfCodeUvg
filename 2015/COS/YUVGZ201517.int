ROUTINE YUVGZ201517 [Type=INT]
YUVGZ201517	;https://adventofcode.com/2015/day/17;
	//Intersystems developer community id: 130669-ab1f69bf
	quit
	/*
Input data:
43
3
4
10
21
44
4
6
47
41
34
17
17
44
36
31
46
9
27
38
	*/
	/*
Day 17 part 1:
The elves bought too much eggnog again - 150 liters this time. To fit it all into your refrigerator, you'll need to move it into smaller containers. You take an inventory of the capacities of the available containers.

For example, suppose you have containers of size 20, 15, 10, 5, and 5 liters. If you need to store 25 liters, there are four ways to do it:

15 and 10
20 and 5 (the first 5)
20 and 5 (the second 5)
15, 5, and 5
Filling all containers entirely, how many different combinations of containers can exactly fit all 150 liters of eggnog?
	*/
	/*
W $$Part1^YUVGZ201517(FN)
	*/
Part1(FileName="",RecordsArr,TotalLiters) PUBLIC
{
	if '$extract($get(TotalLiters))||(TotalLiters'?1.n) {
		read !,"Enter total litters of eggnog: ",TotalLiters
		if '$extract($get(TotalLiters))||(TotalLiters'?1.n) {
			write !,"Wrong total litters value"
			quit 0
		}
	}
		
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set List="",Line=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		set List=List_$listbuild(Record)
	}
	set tempList="" for Index=1:1:$listlength(List) set tempList=tempList_$listbuild(Index)
	for Size=1:1:$listlength(tempList) do Combinations("",tempList,.CombArr,Size,0)
	set CurrList="",Counter=0
	for  {
		set CurrList=$order(CombArr(CurrList)) quit:CurrList=""
		set Liters=0
		for i=1:1:$listlength(CurrList) set Liters=Liters+$list(List,$list(CurrList,i))
		if Liters=TotalLiters set Counter=Counter+1 zw CurrList
	}
	quit Counter
}
Combinations(CurrList,List,Array,Size,WithOrder)
{
	if WithOrder {
		if $listlength(CurrList)=Size {
			set Array(CurrList)=""
			quit
		}

		for i=1:1:$listlength(List) {
			set tempCurrList=CurrList_$listbuild($list(List,i))
			set tempList=$list(List,1,i-1)_$list(List,i+1,*)
			do Combinations(tempCurrList,tempList,.Array,Size,1)
		}
	}
	else {
		if '$listlength(List) {
			set:$listlength(CurrList)=Size Array(CurrList)=""
			quit
		}
		if $listlength(CurrList)=Size {
			set Array(CurrList)=""
			quit
		}

		for i=1:1:$listlength(List) {
			set tempCurrList=CurrList_$listbuild($list(List,i))
			set tempList=$list(List,i+1,*)
			do Combinations(tempCurrList,tempList,.Array,Size,0)
		}
	}
}
	/*
Day 17 part 2:
While playing with all the containers in the kitchen, another load of eggnog arrives! The shipping and receiving department is requesting as many containers as you can spare.

Find the minimum number of containers that can exactly fit all 150 liters of eggnog. How many different ways can you fill that number of containers and still hold exactly 150 litres?

In the example above, the minimum number of containers was two. There were three ways to use that many containers, and so the answer there would be 3.
	*/
	/*
W $$Part2^YUVGZ201517(FN)
	*/
Part2(FileName="",RecordsArr,TotalLiters) PUBLIC
{
	if '$extract($get(TotalLiters))||(TotalLiters'?1.n) {
		read !,"Enter total litters of eggnog: ",TotalLiters
		if '$extract($get(TotalLiters))||(TotalLiters'?1.n) {
			write !,"Wrong total litters value"
			quit 0
		}
	}
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	set List="",Line=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		set List=List_$listbuild(Record)
	}
	set tempList="" for Index=1:1:$listlength(List) set tempList=tempList_$listbuild(Index)
	for Size=1:1:$listlength(tempList) do Combinations("",tempList,.CombArr,Size,0)
	set CurrList="",Counter=0
	for  {
		set CurrList=$order(CombArr(CurrList)) quit:CurrList=""
		set Liters=0
		for i=1:1:$listlength(CurrList) set Liters=Liters+$list(List,$list(CurrList,i))
		if Liters=TotalLiters,$increment(Counter($listlength(CurrList)))
	}
	zw Counter
	set MinContainers=$order(Counter(""))
	quit Counter(MinContainers)
}
CheckData(RecordsArr)
{
	set Line="",Error=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		if Record'?1.n||'$extract(Record) {
			set Error="Wrong data format at line "_Line
			quit
		}
	}
	if $length(Error) {
		write !,Error
		quit 0
	}
	quit 1
}
LoadFile(FileName,RecordsArr)
{
	kill RecordsArr
	open FileName::.1 if '$test {
		write !,"Error loading file "_FileName
		quit 0
	}
	set EndOfFileSW=$zutil(68,40,1) //$system.Process.SetZEOF(1)
	use FileName
	for Line=1:1 {
		read Record quit:$zeof
		if $length(Record) set RecordsArr(Line)=Record
	}
	close FileName
	if 'EndOfFileSW do $zutil(68,40,0) //$system.Process.SetZEOF(0)
	quit 1
}
