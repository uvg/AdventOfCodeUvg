ROUTINE YUVGZ201521 [Type=INT]
YUVGZ201521	;https://adventofcode.com/2015/day/21;
	//Intersystems developer community id: 130669-ab1f69bf
	quit
	/*
Input data:
Hit Points: 109
Damage: 8
Armor: 2
	*/
	/*
Year 2015, Day 21 part 1:
Day 21: RPG Simulator 20XX
Little Henry Case got a new video game for Christmas. It's an RPG, and he's stuck on a boss. He needs to know what equipment to buy at the shop. He hands you the controller.

In this game, the player (you) and the enemy (the boss) take turns attacking. The player always goes first. Each attack reduces the opponent's hit points by at least 1. The first character at or below 0 hit points loses.

Damage dealt by an attacker each turn is equal to the attacker's damage score minus the defender's armor score. An attacker always does at least 1 damage. So, if the attacker has a damage score of 8, and the defender has an armor score of 3, the defender loses 5 hit points. If the defender had an armor score of 300, the defender would still lose 1 hit point.

Your damage score and armor score both start at zero. They can be increased by buying items in exchange for gold. You start with no items and have as much gold as you need. Your total damage or armor is equal to the sum of those stats from all of your items. You have 100 hit points.

Here is what the item shop is selling:

Weapons:    Cost  Damage  Armor
Dagger        8     4       0
Shortsword   10     5       0
Warhammer    25     6       0
Longsword    40     7       0
Greataxe     74     8       0

Armor:      Cost  Damage  Armor
Leather      13     0       1
Chainmail    31     0       2
Splintmail   53     0       3
Bandedmail   75     0       4
Platemail   102     0       5

Rings:      Cost  Damage  Armor
Damage +1    25     1       0
Damage +2    50     2       0
Damage +3   100     3       0
Defense +1   20     0       1
Defense +2   40     0       2
Defense +3   80     0       3
You must buy exactly one weapon; no dual-wielding. Armor is optional, but you can't use more than one. You can buy 0-2 rings (at most one for each hand). You must use any items you buy. The shop only has one of each item, so you can't buy, for example, two rings of Damage +3.

For example, suppose you have 8 hit points, 5 damage, and 5 armor, and that the boss has 12 hit points, 7 damage, and 2 armor:

The player deals 5-2 = 3 damage; the boss goes down to 9 hit points.
The boss deals 7-5 = 2 damage; the player goes down to 6 hit points.
The player deals 5-2 = 3 damage; the boss goes down to 6 hit points.
The boss deals 7-5 = 2 damage; the player goes down to 4 hit points.
The player deals 5-2 = 3 damage; the boss goes down to 3 hit points.
The boss deals 7-5 = 2 damage; the player goes down to 2 hit points.
The player deals 5-2 = 3 damage; the boss goes down to 0 hit points.
In this scenario, the player wins! (Barely.)

You have 100 hit points. The boss's actual stats are in your puzzle input. What is the least amount of gold you can spend and still win the fight?
	*/
	/*
W $$Part1^YUVGZ201521(FN)
	*/
Part1(FileName="",RecordsArr) PUBLIC	;
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	//
	//                           Hit Points         ,         Damage             ,         Armor
	set Boss=$listbuild($piece(RecordsArr(1),": ",2),$piece(RecordsArr(2),": ",2),$piece(RecordsArr(3),": ",2))
	//
	set HitPoints=100
	do LoadItems(.ItemsArr)
	set ItemsArr("Weapons")=$listbuild(1,1)
	set ItemsArr("Armor")=$listbuild(0,1)
	set ItemsArr("Rings")=$listbuild(0,2)
	zw ItemsArr
	do GetCombinations("",.ItemsArr,.CombArr,"")
	zw CombArr
	set Key=""
	for  {
		set Key=$order(CombArr(Key)) quit:Key=""
		set Data=CombArr(Key)
		set ArmorData=$list(Data,1)
		set RingsData=$list(Data,2)
		set WeaponData=$list(Data,3)
		set (TotalCost,TotalDamage,TotalArmor)=0
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Armor",ArmorData)
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Rings",RingsData)
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Weapons",WeaponData)
		set Data=$listbuild(TotalCost,TotalDamage,TotalArmor,Data)
		set CombArr(Key)=Data
	}
	zw CombArr
	w !!!

	set ANS=$$SimulateGames(.CombArr,Boss,HitPoints)
	//
	//
	//
	w !!!
	quit ANS
}
SimulateGames(&CombArr,Boss,HitPoints,SWMaxToLose=0)
{
	set Comb="",MinCost=9999,MaxCost=-1
	for  {
		set Comb=$order(CombArr(Comb)) quit:Comb=""
		set Data=CombArr(Comb)
		set Cost=$list(Data,1),Damage=$list(Data,2),Armor=$list(Data,3)
		if 'SWMaxToLose continue:Cost>=MinCost
		if SWMaxToLose continue:Cost<=MaxCost
		//w !,Comb,"=",Cost,";",Damage,";",Armor,!!
		set win=$$SimulateGame(Boss,HitPoints,Damage,Armor) 
		if 'SWMaxToLose,win set MinCost=Cost
		if SWMaxToLose,'win set MaxCost=Cost
	}
	quit $select('SWMaxToLose:MinCost,1:MaxCost)
}
SimulateGame(BossData,HitPoints,Damage,Armor)
{
	set BossHitPoints=$list(BossData,1),BossDamage=$list(BossData,2),BossArmor=$list(BossData,3)
	set Player=1,PlayerHit=Damage-BossArmor,BossHit=BossDamage-Armor
	set:PlayerHit<1 PlayerHit=1
	set:BossHit<1 BossHit=1
	//w !,"BossHit=",BossHit
	//w !,"PlayerHit=",PlayerHit
	//w !,"BossHitPoints=",BossHitPoints
	for  {
		set:Player BossHitPoints=BossHitPoints-PlayerHit
		set:'Player HitPoints=HitPoints-BossHit
		quit:BossHitPoints<=0
		quit:HitPoints<=0
		set Player='Player
		//w !,Player
	}
	//w !,HitPoints>0
	quit HitPoints>0
}
SetData(&Cost,&Damage,&Armor,&ItemsArr,Key,ItemsData)
{
	for i=1:1:$listlength(ItemsData) {
		set Item=$list(ItemsData,i)
		continue:Item=""
		set tempData=ItemsArr(Key,Item)
		set Cost=Cost+$list(tempData,1)
		set Damage=Damage+$list(tempData,2)
		set Armor=Armor+$list(tempData,3)
	}
	
}
LoadItems(&ItemsArray)
{
	kill ItemsArray
	set ItemsArray("Weapons","Dagger")=$listbuild(8,4,0)
	set ItemsArray("Weapons","Shortsword")=$listbuild(10,5,0)
	set ItemsArray("Weapons","Warhammer")=$listbuild(25,6,0)
	set ItemsArray("Weapons","Longsword")=$listbuild(40,7,0)
	set ItemsArray("Weapons","Greataxe")=$listbuild(74,8,0)

	set ItemsArray("Armor","Leather")=$listbuild(13,0,1)
	set ItemsArray("Armor","Chainmail")=$listbuild(31,0,2)
	set ItemsArray("Armor","Splintmail")=$listbuild(53,0,3)
	set ItemsArray("Armor","Bandedmail")=$listbuild(75,0,4)
	set ItemsArray("Armor","Platemail")=$listbuild(102,0,5)

	set ItemsArray("Rings","Damage +1")=$listbuild(25,1,0)
	set ItemsArray("Rings","Damage +2")=$listbuild(50,2,0)
	set ItemsArray("Rings","Damage +3")=$listbuild(100,3,0)
	set ItemsArray("Rings","Defense +1")=$listbuild(20,0,1)
	set ItemsArray("Rings","Defense +2")=$listbuild(40,0,2)
	set ItemsArray("Rings","Defense +3")=$listbuild(80,0,3)
}
GetCombinations(Key,&ItemsArr,&CombArr,CurrData)
{
	set Key=$order(ItemsArr(Key))
	if Key="" {
		set CombArr($increment(CombArr))=CurrData
		quit
	}
	set Data=ItemsArr(Key)
	set Min=$list(Data,1),Max=$list(Data,2)
	if Min=0 {
		set tempData=CurrData_$listbuild($listbuild(""))
		do GetCombinations(Key,.ItemsArr,.CombArr,tempData)
	}
	for i=1:1:Max {
		if i=1 {
			set Item=""
			for  {
				set Item=$order(ItemsArr(Key,Item)) quit:Item=""
				set tempData=CurrData_$listbuild($listbuild(Item))
				do GetCombinations(Key,.ItemsArr,.CombArr,tempData)
			}
		}
		i i>1 {
			merge tempArr=ItemsArr(Key)
			do GetInnerComb(.tempArr,i,.tempComb,"")
			//zw tempComb
			set tempKey=""
			for  {
				set tempKey=$order(tempComb(tempKey)) quit:tempKey=""
				set tempData=CurrData_$listbuild(tempComb(tempKey))
				do GetCombinations(Key,.ItemsArr,.CombArr,tempData)
			}
		}
	}
}
GetInnerComb(&ItemArr,Total,&CombArr,Data)
{
	if '$data(ItemArr)||(Total<1) {
		set CombArr($increment(CombArr))=Data
		quit
	}
	set Key=""
	for  {
		set Key=$order(ItemArr(Key)) quit:Key=""
		kill ItemArr(Key)
		merge tempArr=ItemArr
		set tempData=Data_$listbuild(Key)
		do GetInnerComb(.tempArr,Total-1,.CombArr,tempData)
	}
}

	/*
Year 2015, Day 21 part 2:
Turns out the shopkeeper is working with the boss, and can persuade you to buy whatever items he wants. The other rules still apply, and he still only has one of each item.

What is the most amount of gold you can spend and still lose the fight?
	*/
	/*
W $$Part2^YUVGZ201521(FN)
	*/
Part2(FileName="",RecordsArr) PUBLIC	;
{
	if $data(RecordsArr)'=10 {
		if '$length(FileName) {
			read !,"Enter filename: ",FileName
			write !
		}
		if '$length(FileName) {
			write !,"Missing file to read from"
			quit 0
		}
		quit:'$$LoadFile(FileName,.RecordsArr) 0
		if '$data(RecordsArr) {
			write !,"No data was red from "_FileName
			quit 0
		}
	}
	quit:'$$CheckData(.RecordsArr) 0
	//
	//                           Hit Points         ,         Damage             ,         Armor
	set Boss=$listbuild($piece(RecordsArr(1),": ",2),$piece(RecordsArr(2),": ",2),$piece(RecordsArr(3),": ",2))
	//
	set HitPoints=100
	do LoadItems(.ItemsArr)
	set ItemsArr("Weapons")=$listbuild(1,1)
	set ItemsArr("Armor")=$listbuild(0,1)
	set ItemsArr("Rings")=$listbuild(0,2)
	zw ItemsArr
	do GetCombinations("",.ItemsArr,.CombArr,"")
	zw CombArr
	set Key=""
	for  {
		set Key=$order(CombArr(Key)) quit:Key=""
		set Data=CombArr(Key)
		set ArmorData=$list(Data,1)
		set RingsData=$list(Data,2)
		set WeaponData=$list(Data,3)
		set (TotalCost,TotalDamage,TotalArmor)=0
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Armor",ArmorData)
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Rings",RingsData)
		do SetData(.TotalCost,.TotalDamage,.TotalArmor,.ItemsArr,"Weapons",WeaponData)
		set Data=$listbuild(TotalCost,TotalDamage,TotalArmor,Data)
		set CombArr(Key)=Data
	}
	zw CombArr
	w !!!

	set ANS=$$SimulateGames(.CombArr,Boss,HitPoints,1)
	//
	//
	//
	w !!!
	quit ANS
}
CheckData(RecordsArr)
{
	if '$data(RecordsArr(1))||'$data(RecordsArr(2))||'$data(RecordsArr(3)) {
		write !,"Wrong data, should contain exactlly 3 lines of data"
		quit 0
	}
	set Line="",Error=""
	for  {
		set Line=$order(RecordsArr(Line)) quit:Line=""
		set Record=RecordsArr(Line)
		if Record'?.E1": "1.N {
			set Error="Wrong data format at line "_Line
			quit
		}
	}
	if $length(Error) {
		write !,Error
		quit 0
	}
	quit 1
}
LoadFile(FileName,RecordsArr)	;
{
	kill RecordsArr
	open FileName::.1 if '$test {
		write !,"Error loading file "_FileName
		quit 0
	}
	set EndOfFileSW=$zutil(68,40,1) //$system.Process.SetZEOF(1)
	use FileName
	for Line=1:1 {
		read Record quit:$zeof
		set RecordsArr(Line)=Record
	}
	close FileName
	if 'EndOfFileSW do $zutil(68,40,0) //$system.Process.SetZEOF(0)
	quit 1
}
